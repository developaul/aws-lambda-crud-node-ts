service: aws-lambda-crud-node
frameworkVersion: '3'

plugins:
  - serverless-esbuild
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: true	

provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-1
  iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:*        
        Resource: 
          - arn:aws:dynamodb:us-east-1:975049906602:table/TaskTable
	
resources:
  Resources:
    TaskTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TaskTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

functions:
  swapi:
    handler: src/functions/swapi.handler
    events:
      - httpApi:
          path: /api/swapi/{entity}
          method: get
      - httpApi:
          path: /api/swapi/{entity}/{id}
          method: get
  addTask:
    handler: src/functions/addTask.handler
    events:
      - httpApi:
          path: /api/tasks
          method: post
  getTasks:
    handler: src/functions/getTasks.handler
    events:
      - httpApi:
          path: /api/tasks
          method: get
  getTask:
    handler: src/functions/getTask.handler
    events:
      - httpApi:
          path: /api/tasks/{id}
          method: get
  updateTask:
    handler: src/functions/updateTask.handler
    events:
      - httpApi:
          path: /api/tasks/{id}
          method: put
  deleteTask:
    handler: src/functions/deleteTask.handler
    events:
      - httpApi:
          path: /api/tasks/{id}
          method: delete
  